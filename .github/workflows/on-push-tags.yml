name: CartApi - on-push-tags  ## To run, create a tag using one of the patterns below.

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]"
      - "[0-9]+.[0-9]+.[0-9]-staging"

jobs:
  deploy:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Check Environment
        run: |
          if [[ ${{ github.ref_name }} == *-staging ]]; then
            export ENVIRONMENT=staging
          else
            export ENVIRONMENT=production
          fi

          echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
          echo "==== Deploy to $ENVIRONMENT"

      - id: cache
        name: Packages Cache
        uses: actions/cache@v3
        with:
          key: cache-packages-e720e97a-38d5-498d-be12-6d077d9f5d43
          path: |
            /usr/local/bin/yq
            /usr/local/bin/argocd
          restore-keys: |
            cache-packages-e720e97a-38d5-498d-be12-6d077d9f5d43

      - name: SetUp Yq
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/local/bin/yq
          chmod +x /usr/local/bin/yq

      - name: SetUp ArgoCd
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -sSL -o argocd-linux-amd64 https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          sudo install -m 555 argocd-linux-amd64 /usr/local/bin/argocd

          rm argocd-linux-amd64

      - name: SetUp Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: rempeloliveira/public:cart-api.${{ github.ref_name }}

      - name: Replace Deployment Image Version
        run: |
          yq -i '.spec.template.spec.containers[0].image |=
            sub("cart-api.*", "cart-api.${{ github.ref_name }}")' .k8s/${{ env.ENVIRONMENT }}/deployment.yml

          git config user.name RempelOliveira
          git config user.email rempel.oliveira@gmail.com

          git add .

          if git status | grep -q "Changes to be committed"; then
            git commit -m "Replaced Deployment Image Version to ${{ github.ref_name }}"
            git push origin HEAD:${{ github.event.base_ref }}
          else
            echo "==== No changes to commit"
          fi

      - name: Sync ArgoCd Application
        run: |
          argocd login ${{ secrets.ARGOCD_SERVER }} \
            --username ${{ secrets.ARGOCD_USERNAME }} \
            --password ${{ secrets.ARGOCD_PASSWORD }} \
            --grpc-web

          argocd app create cart-api${{ env.ENVIRONMENT == 'staging' && '-staging' || '' }} \
            --repo https://github.com/RempelOliveira/LojaIntegrada.Backend.git \
            --path .k8s/${{ env.ENVIRONMENT }} \
            --revision ${{ github.event.base_ref }} \
            --dest-server https://kubernetes.default.svc \
            --dest-namespace ${{ env.ENVIRONMENT }}-apps \
            --server ${{ secrets.ARGOCD_SERVER }} \
            --grpc-web

          argocd app sync cart-api${{ env.ENVIRONMENT == 'staging' && '-staging' || '' }} \
            --server ${{ secrets.ARGOCD_SERVER }} \
            --grpc-web
